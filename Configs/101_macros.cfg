#############################################################################################################
#  Conditional Homing
#############################################################################################################
[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        _STATUS_HOMING
        G28
        _STATUS_READY
    {% endif %}


#############################################################################################################
# NOZZLE SCRUBBER MACRO
#############################################################################################################
[gcode_macro CLEAN_NOZZLE]
  variable_start_x: 280
  variable_start_y: 306
  variable_start_z: 0.5
  variable_wipe_dist: -50
  variable_wipe_qty: 8
  variable_wipe_spd: 200
  variable_raise_distance: 5

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 ## Move nozzle to start position
  G90                                  # absolute positioning
  _STATUS_CLEANING
  G1 X{start_x} Y{start_y} F6000
  G1 Z{start_z} F1500

 ## Nozzle Temp for wiping purpose
  M109 S250
  G4 P20000            # 20s wait for ooze
  M104 S140
  G4 P10000            # 10s wait 

 ## Wipe nozzle
  {% for wipes in range(1, (wipe_qty + 1)) %}
     G1 X{start_x + wipe_dist} F{wipe_spd * 60}
     G1 X{start_x} F{wipe_spd * 60}
  {% endfor %}

 ## Raise nozzle
   G1 Z{raise_distance}
  # G1 X150 Y150
  # M109 S140


#############################################################################################################
# SENSORLESS HOMING MACROS
#############################################################################################################
[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
     {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
     {% set HOME_CURRENT = 0.7 %}
     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Lift Z a bit    
      G90                      # Absolute Mode
      G1 Z3 F600              
    # Home
      G28 X
    # Move away
      G91
      G1 X10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
      G4 P2000
    # Set current during print
      SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
      SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
     {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
     {% set HOME_CURRENT = 0.7 %}
     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
      G28 Y
    # Move away
      G91
      G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
      G4 P2000
    # Set current during print
      SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
      SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


#############################################################################################################
# CANCEL PRINT
#############################################################################################################
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
   M220 S100 ; Reset Speed factor override percentage to default (100%)
   M221 S100 ; Reset Extrude factor override percentage to default (100%)
   G91       ; Set coordinates to relative
   {% if printer.extruder.temperature >= 170 %}
      G1 F1800 E-3 ; Retract filament 3 mm to prevent oozing
   {% endif %}
   ;if all axis are homed, lift the hotend to leave room for hot filament to ooze and to keep it clear of the bed.
   {% if printer.toolhead.homed_axes == "xyz" %}
      G1 F6000 Z10   ; Move Z Axis up 10 mm to allow filament ooze freely
      G90            ; Set coordinates to absolute
      G1 X150 Y300 F1000 ; Move Printer Head Out of Way
      ; M84 ; Disable stepper motors - don't so the gantry stays aligned
   {% endif %}
   ;set part fan speed to zero.
   M106 S0
   ;bed and hotend are left at the print temps in case I want to restart.
   CLEAR_PAUSE
   BASE_CANCEL_PRINT


#############################################################################################################
# LOAD AND UNLOAD FILAMENT
#############################################################################################################
[gcode_macro LOAD_FILAMENT]
variable_load_distance:   60
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 10 %}
    SAVE_GCODE_STATE NAME=load_state
     G91
     G92 E0
     G1 E{load_distance} F{max_velocity} # fast-load
     G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  200
variable_purge_distance:   15
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 20 %}
    SAVE_GCODE_STATE NAME=unload_state
     G91
     G92 E0
     G1 E{purge_distance} F{speed} # purge
     G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state


#############################################################################################################
# REDUCE WAIT FOR TEMP TIME
#############################################################################################################
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   # Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}


[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
     G90
     G28
    QUAD_GANTRY_LEVEL
     G28
     G0 X150 Y150 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_G32

#############################################################################################################
# ETC
#############################################################################################################

[gcode_macro _DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro T0]
gcode: #toolchange macro
[gcode_macro T1]
gcode: #toolchange macro
[gcode_macro T2]
gcode: #toolchange macro
[gcode_macro T3]
gcode: #toolchange macro
[gcode_macro T4]
gcode: #toolchange macro
[gcode_macro T5]
gcode: #toolchange macro
